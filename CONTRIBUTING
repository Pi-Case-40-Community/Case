LICENSE

You must include a LICENSE file in the root directory of your repo.

If you have used Cooler Master's files in the creation process or if your design is based on them - you must adhere to their license, otherwise, we encourage you to use [the strongly-reciprocal variant of CERN Open Hardware License v2.](https://ohwr.org/project/cernohl/wikis/Documents/CERN-OHL-version-2) for hardware, and [The GNU General Public License v3](https://www.gnu.org/licenses/gpl-3.0.en.html) for software.

README

You must include a README.md in the root directory of your repo.

If your project isn't done and tested, make sure your README specifies that in an unambiguous way, whether that's by including a TODO section or by simply stating that it isn't done and/or tested. If your project is done and tested, make sure to specify manifacturer and order parameters or reproduction procedure (if done at home), as well as output files generation parameters (if specific ones are required) that you have confirmed to work, in the case of hardware, or compilation (if needed) and usage method, in the case of software.

STANDARDS

1. We strongly recommend the use of [Free Software](https://www.gnu.org/philosophy/free-sw.en.html) for the creation of your project. So, please consider using [FreeCAD](https://www.freecadweb.org/) for your CAD needs, [KiCAD](https://kicad.org/) for EDA and [Vim](https://www.vim.org/) for any code or documentation.
2. Your repo must include the source files. Releasing just .STP/.STL, gerbers, PDF of your schematic, or a compiled binary is not accepted. In the case of a PCB, you must also release any schematic symbols, footprints, etc that your PCB uses, in a project specific library.
3. If your design is ready and tested and your manifacturer requires a specific way of generating the output files, consider releasing those as well, in a clearly marked folder, besides documenting the generation procedure in your README.
4. Your repo's main branch must not be called 'master'. We recommend the name 'main' instead.

Pull Request Procedure

1. Fork the repo and clone your fork using the method described in the README.md
2. Add your project's repo as a submodule in the respective folder, by cd-ing into the repo's root folder and executing the following command ```git submodule add -b <main branch name> https://github.com/<username>/<repo name>.git ./<project type folder>/<username>/<repo name>/``` after replacing the <keywords> in it with the required information. Make sure you use the https url to your repository and not the ssh one, or people won't be able to clone your submodule without needing the password for your private key.
3. Commit using a descriptive commit message.
4. Push
5. Open a PR.
